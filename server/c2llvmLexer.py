# Generated from c2llvm.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62")
        buf.write("\u014b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3")
        buf.write("\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$")
        buf.write("\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'")
        buf.write("\7\'\u00e9\n\'\f\'\16\'\u00ec\13\'\3(\6(\u00ef\n(\r(\16")
        buf.write("(\u00f0\3(\3(\6(\u00f5\n(\r(\16(\u00f6\3)\3)\3)\3)\3*")
        buf.write("\3*\7*\u00ff\n*\f*\16*\u0102\13*\3*\3*\3+\6+\u0107\n+")
        buf.write("\r+\16+\u0108\3,\6,\u010c\n,\r,\16,\u010d\3,\3,\5,\u0112")
        buf.write("\n,\3-\3-\3-\3-\5-\u0118\n-\3.\3.\3.\3.\3.\3.\3.\3.\3")
        buf.write(".\3.\3.\5.\u0125\n.\3/\3/\3/\3/\7/\u012b\n/\f/\16/\u012e")
        buf.write("\13/\3/\5/\u0131\n/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\7")
        buf.write("\60\u013b\n\60\f\60\16\60\u013e\13\60\3\60\3\60\3\60\3")
        buf.write("\60\3\60\3\61\6\61\u0146\n\61\r\61\16\61\u0147\3\61\3")
        buf.write("\61\5\u0100\u012c\u013c\2\62\3\3\5\4\7\5\t\6\13\7\r\b")
        buf.write("\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22")
        buf.write("#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35")
        buf.write("9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62")
        buf.write("\3\2\b\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\4\2C\\c|\6\2")
        buf.write("##,-//\61\61\5\2\13\f\17\17\"\"\2\u015c\2\3\3\2\2\2\2")
        buf.write("\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3")
        buf.write("\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2")
        buf.write("\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2")
        buf.write("\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3")
        buf.write("\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2")
        buf.write("\2a\3\2\2\2\3c\3\2\2\2\5l\3\2\2\2\7n\3\2\2\2\tp\3\2\2")
        buf.write("\2\13r\3\2\2\2\rt\3\2\2\2\17v\3\2\2\2\21x\3\2\2\2\23z")
        buf.write("\3\2\2\2\25}\3\2\2\2\27\177\3\2\2\2\31\u0081\3\2\2\2\33")
        buf.write("\u0086\3\2\2\2\35\u008c\3\2\2\2\37\u0090\3\2\2\2!\u0097")
        buf.write("\3\2\2\2#\u009d\3\2\2\2%\u00a6\3\2\2\2\'\u00a8\3\2\2\2")
        buf.write(")\u00aa\3\2\2\2+\u00ac\3\2\2\2-\u00ae\3\2\2\2/\u00b0\3")
        buf.write("\2\2\2\61\u00b2\3\2\2\2\63\u00b4\3\2\2\2\65\u00b6\3\2")
        buf.write("\2\2\67\u00b8\3\2\2\29\u00bb\3\2\2\2;\u00be\3\2\2\2=\u00c1")
        buf.write("\3\2\2\2?\u00c4\3\2\2\2A\u00c7\3\2\2\2C\u00ca\3\2\2\2")
        buf.write("E\u00ce\3\2\2\2G\u00d5\3\2\2\2I\u00da\3\2\2\2K\u00df\3")
        buf.write("\2\2\2M\u00e6\3\2\2\2O\u00ee\3\2\2\2Q\u00f8\3\2\2\2S\u00fc")
        buf.write("\3\2\2\2U\u0106\3\2\2\2W\u010b\3\2\2\2Y\u0117\3\2\2\2")
        buf.write("[\u0124\3\2\2\2]\u0126\3\2\2\2_\u0136\3\2\2\2a\u0145\3")
        buf.write("\2\2\2cd\7%\2\2de\7k\2\2ef\7p\2\2fg\7e\2\2gh\7n\2\2hi")
        buf.write("\7w\2\2ij\7f\2\2jk\7g\2\2k\4\3\2\2\2lm\7>\2\2m\6\3\2\2")
        buf.write("\2no\7@\2\2o\b\3\2\2\2pq\7}\2\2q\n\3\2\2\2rs\7\177\2\2")
        buf.write("s\f\3\2\2\2tu\7=\2\2u\16\3\2\2\2vw\7.\2\2w\20\3\2\2\2")
        buf.write("xy\7?\2\2y\22\3\2\2\2z{\7k\2\2{|\7h\2\2|\24\3\2\2\2}~")
        buf.write("\7*\2\2~\26\3\2\2\2\177\u0080\7+\2\2\u0080\30\3\2\2\2")
        buf.write("\u0081\u0082\7g\2\2\u0082\u0083\7n\2\2\u0083\u0084\7u")
        buf.write("\2\2\u0084\u0085\7g\2\2\u0085\32\3\2\2\2\u0086\u0087\7")
        buf.write("y\2\2\u0087\u0088\7j\2\2\u0088\u0089\7k\2\2\u0089\u008a")
        buf.write("\7n\2\2\u008a\u008b\7g\2\2\u008b\34\3\2\2\2\u008c\u008d")
        buf.write("\7h\2\2\u008d\u008e\7q\2\2\u008e\u008f\7t\2\2\u008f\36")
        buf.write("\3\2\2\2\u0090\u0091\7t\2\2\u0091\u0092\7g\2\2\u0092\u0093")
        buf.write("\7v\2\2\u0093\u0094\7w\2\2\u0094\u0095\7t\2\2\u0095\u0096")
        buf.write("\7p\2\2\u0096 \3\2\2\2\u0097\u0098\7d\2\2\u0098\u0099")
        buf.write("\7t\2\2\u0099\u009a\7g\2\2\u009a\u009b\7c\2\2\u009b\u009c")
        buf.write("\7m\2\2\u009c\"\3\2\2\2\u009d\u009e\7e\2\2\u009e\u009f")
        buf.write("\7q\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2")
        buf.write("\7k\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7w\2\2\u00a4\u00a5")
        buf.write("\7g\2\2\u00a5$\3\2\2\2\u00a6\u00a7\7]\2\2\u00a7&\3\2\2")
        buf.write("\2\u00a8\u00a9\7_\2\2\u00a9(\3\2\2\2\u00aa\u00ab\7\60")
        buf.write("\2\2\u00ab*\3\2\2\2\u00ac\u00ad\7#\2\2\u00ad,\3\2\2\2")
        buf.write("\u00ae\u00af\7,\2\2\u00af.\3\2\2\2\u00b0\u00b1\7\61\2")
        buf.write("\2\u00b1\60\3\2\2\2\u00b2\u00b3\7\'\2\2\u00b3\62\3\2\2")
        buf.write("\2\u00b4\u00b5\7-\2\2\u00b5\64\3\2\2\2\u00b6\u00b7\7/")
        buf.write("\2\2\u00b7\66\3\2\2\2\u00b8\u00b9\7?\2\2\u00b9\u00ba\7")
        buf.write("?\2\2\u00ba8\3\2\2\2\u00bb\u00bc\7#\2\2\u00bc\u00bd\7")
        buf.write("?\2\2\u00bd:\3\2\2\2\u00be\u00bf\7@\2\2\u00bf\u00c0\7")
        buf.write("?\2\2\u00c0<\3\2\2\2\u00c1\u00c2\7>\2\2\u00c2\u00c3\7")
        buf.write("?\2\2\u00c3>\3\2\2\2\u00c4\u00c5\7(\2\2\u00c5\u00c6\7")
        buf.write("(\2\2\u00c6@\3\2\2\2\u00c7\u00c8\7~\2\2\u00c8\u00c9\7")
        buf.write("~\2\2\u00c9B\3\2\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7")
        buf.write("p\2\2\u00cc\u00cd\7v\2\2\u00cdD\3\2\2\2\u00ce\u00cf\7")
        buf.write("f\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7w\2\2\u00d1\u00d2")
        buf.write("\7d\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7g\2\2\u00d4F\3")
        buf.write("\2\2\2\u00d5\u00d6\7e\2\2\u00d6\u00d7\7j\2\2\u00d7\u00d8")
        buf.write("\7c\2\2\u00d8\u00d9\7t\2\2\u00d9H\3\2\2\2\u00da\u00db")
        buf.write("\7x\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7k\2\2\u00dd\u00de")
        buf.write("\7f\2\2\u00deJ\3\2\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1")
        buf.write("\7v\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7w\2\2\u00e3\u00e4")
        buf.write("\7e\2\2\u00e4\u00e5\7v\2\2\u00e5L\3\2\2\2\u00e6\u00ea")
        buf.write("\t\2\2\2\u00e7\u00e9\t\3\2\2\u00e8\u00e7\3\2\2\2\u00e9")
        buf.write("\u00ec\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2")
        buf.write("\u00ebN\3\2\2\2\u00ec\u00ea\3\2\2\2\u00ed\u00ef\t\4\2")
        buf.write("\2\u00ee\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee")
        buf.write("\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2")
        buf.write("\u00f4\7\60\2\2\u00f3\u00f5\t\4\2\2\u00f4\u00f3\3\2\2")
        buf.write("\2\u00f5\u00f6\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7")
        buf.write("\3\2\2\2\u00f7P\3\2\2\2\u00f8\u00f9\7)\2\2\u00f9\u00fa")
        buf.write("\13\2\2\2\u00fa\u00fb\7)\2\2\u00fbR\3\2\2\2\u00fc\u0100")
        buf.write("\7$\2\2\u00fd\u00ff\13\2\2\2\u00fe\u00fd\3\2\2\2\u00ff")
        buf.write("\u0102\3\2\2\2\u0100\u0101\3\2\2\2\u0100\u00fe\3\2\2\2")
        buf.write("\u0101\u0103\3\2\2\2\u0102\u0100\3\2\2\2\u0103\u0104\7")
        buf.write("$\2\2\u0104T\3\2\2\2\u0105\u0107\t\4\2\2\u0106\u0105\3")
        buf.write("\2\2\2\u0107\u0108\3\2\2\2\u0108\u0106\3\2\2\2\u0108\u0109")
        buf.write("\3\2\2\2\u0109V\3\2\2\2\u010a\u010c\t\5\2\2\u010b\u010a")
        buf.write("\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010b\3\2\2\2\u010d")
        buf.write("\u010e\3\2\2\2\u010e\u0111\3\2\2\2\u010f\u0110\7\60\2")
        buf.write("\2\u0110\u0112\7j\2\2\u0111\u010f\3\2\2\2\u0111\u0112")
        buf.write("\3\2\2\2\u0112X\3\2\2\2\u0113\u0114\7(\2\2\u0114\u0118")
        buf.write("\7(\2\2\u0115\u0116\7~\2\2\u0116\u0118\7~\2\2\u0117\u0113")
        buf.write("\3\2\2\2\u0117\u0115\3\2\2\2\u0118Z\3\2\2\2\u0119\u0125")
        buf.write("\t\6\2\2\u011a\u011b\7?\2\2\u011b\u0125\7?\2\2\u011c\u011d")
        buf.write("\7#\2\2\u011d\u0125\7?\2\2\u011e\u0125\7>\2\2\u011f\u0120")
        buf.write("\7>\2\2\u0120\u0125\7?\2\2\u0121\u0125\7@\2\2\u0122\u0123")
        buf.write("\7@\2\2\u0123\u0125\7?\2\2\u0124\u0119\3\2\2\2\u0124\u011a")
        buf.write("\3\2\2\2\u0124\u011c\3\2\2\2\u0124\u011e\3\2\2\2\u0124")
        buf.write("\u011f\3\2\2\2\u0124\u0121\3\2\2\2\u0124\u0122\3\2\2\2")
        buf.write("\u0125\\\3\2\2\2\u0126\u0127\7\61\2\2\u0127\u0128\7\61")
        buf.write("\2\2\u0128\u012c\3\2\2\2\u0129\u012b\13\2\2\2\u012a\u0129")
        buf.write("\3\2\2\2\u012b\u012e\3\2\2\2\u012c\u012d\3\2\2\2\u012c")
        buf.write("\u012a\3\2\2\2\u012d\u0130\3\2\2\2\u012e\u012c\3\2\2\2")
        buf.write("\u012f\u0131\7\17\2\2\u0130\u012f\3\2\2\2\u0130\u0131")
        buf.write("\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0133\7\f\2\2\u0133")
        buf.write("\u0134\3\2\2\2\u0134\u0135\b/\2\2\u0135^\3\2\2\2\u0136")
        buf.write("\u0137\7\61\2\2\u0137\u0138\7,\2\2\u0138\u013c\3\2\2\2")
        buf.write("\u0139\u013b\13\2\2\2\u013a\u0139\3\2\2\2\u013b\u013e")
        buf.write("\3\2\2\2\u013c\u013d\3\2\2\2\u013c\u013a\3\2\2\2\u013d")
        buf.write("\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0140\7,\2\2")
        buf.write("\u0140\u0141\7\61\2\2\u0141\u0142\3\2\2\2\u0142\u0143")
        buf.write("\b\60\2\2\u0143`\3\2\2\2\u0144\u0146\t\7\2\2\u0145\u0144")
        buf.write("\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147")
        buf.write("\u0148\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u014a\b\61\2")
        buf.write("\2\u014ab\3\2\2\2\20\2\u00ea\u00f0\u00f6\u0100\u0108\u010d")
        buf.write("\u0111\u0117\u0124\u012c\u0130\u013c\u0147\3\b\2\2")
        return buf.getvalue()


class c2llvmLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    ID = 38
    DOUBLE = 39
    CHAR = 40
    STRING = 41
    INT = 42
    HEADER = 43
    Conjunction = 44
    Operator = 45
    LineComment = 46
    BlockComment = 47
    WS = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'>'", "'{'", "'}'", "';'", "','", "'='", 
            "'if'", "'('", "')'", "'else'", "'while'", "'for'", "'return'", 
            "'break'", "'continue'", "'['", "']'", "'.'", "'!'", "'*'", 
            "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>='", "'<='", 
            "'&&'", "'||'", "'int'", "'double'", "'char'", "'void'", "'struct'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "DOUBLE", "CHAR", "STRING", "INT", "HEADER", "Conjunction", 
            "Operator", "LineComment", "BlockComment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "ID", "DOUBLE", 
                  "CHAR", "STRING", "INT", "HEADER", "Conjunction", "Operator", 
                  "LineComment", "BlockComment", "WS" ]

    grammarFileName = "c2llvm.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


